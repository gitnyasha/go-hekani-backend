// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"context"
)

type Querier interface {
	CreateAnswer(ctx context.Context, arg CreateAnswerParams) (Answer, error)
	CreateArticle(ctx context.Context, arg CreateArticleParams) (Article, error)
	CreateArticleCategory(ctx context.Context, name string) (ArticleCategory, error)
	CreateComment(ctx context.Context, arg CreateCommentParams) (Comment, error)
	CreateLike(ctx context.Context, arg CreateLikeParams) (Like, error)
	CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Question, error)
	CreateQuestionCategory(ctx context.Context, name string) (QuestionCategory, error)
	CreateRelationship(ctx context.Context, arg CreateRelationshipParams) (Relationship, error)
	CreateReply(ctx context.Context, arg CreateReplyParams) (Reply, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateUserArticleRelationship(ctx context.Context, arg CreateUserArticleRelationshipParams) (UserArticleRelationship, error)
	CreateUserQuestionRelation(ctx context.Context, arg CreateUserQuestionRelationParams) (UserQuestionRelation, error)
	CreateVote(ctx context.Context, arg CreateVoteParams) (Vote, error)
	DeleteAnswer(ctx context.Context, id int64) error
	DeleteArticle(ctx context.Context, id int64) error
	DeleteArticleCategory(ctx context.Context, id int64) error
	DeleteComment(ctx context.Context, id int64) error
	DeleteLike(ctx context.Context, id int64) error
	DeleteQuestion(ctx context.Context, id int64) error
	DeleteQuestionCategory(ctx context.Context, id int64) error
	DeleteRelationship(ctx context.Context, followerID int32) error
	DeleteReply(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	DeleteUserArticleRelationship(ctx context.Context, followerID int32) error
	DeleteUserQuestionRelation(ctx context.Context, followerID int32) error
	DeleteVote(ctx context.Context, id int64) error
	GetAnswer(ctx context.Context, id int64) (Answer, error)
	GetArticle(ctx context.Context, id int64) (Article, error)
	GetArticleCategory(ctx context.Context, id int64) (ArticleCategory, error)
	GetComment(ctx context.Context, id int64) (Comment, error)
	GetLikes(ctx context.Context, articleID int32) ([]Like, error)
	GetQuestion(ctx context.Context, id int64) (Question, error)
	GetQuestionCategory(ctx context.Context, id int64) (QuestionCategory, error)
	GetReply(ctx context.Context, id int64) (Reply, error)
	GetUser(ctx context.Context, id int64) (User, error)
	GetVotes(ctx context.Context, answerID int32) ([]Vote, error)
	ListAnswers(ctx context.Context, arg ListAnswersParams) ([]Answer, error)
	ListArticleCategories(ctx context.Context, arg ListArticleCategoriesParams) ([]ArticleCategory, error)
	ListArticles(ctx context.Context, arg ListArticlesParams) ([]Article, error)
	ListComments(ctx context.Context, arg ListCommentsParams) ([]Comment, error)
	ListQuestionCategories(ctx context.Context, arg ListQuestionCategoriesParams) ([]QuestionCategory, error)
	ListQuestions(ctx context.Context, arg ListQuestionsParams) ([]Question, error)
	ListReplies(ctx context.Context, arg ListRepliesParams) ([]Reply, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	UpdateAnswer(ctx context.Context, arg UpdateAnswerParams) (Answer, error)
	UpdateArticleCategory(ctx context.Context, arg UpdateArticleCategoryParams) (ArticleCategory, error)
	UpdateComment(ctx context.Context, arg UpdateCommentParams) (Comment, error)
	UpdateQuestion(ctx context.Context, arg UpdateQuestionParams) (Question, error)
	UpdateQuestionCategory(ctx context.Context, arg UpdateQuestionCategoryParams) (QuestionCategory, error)
	UpdateReply(ctx context.Context, arg UpdateReplyParams) (Reply, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
