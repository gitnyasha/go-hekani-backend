// Code generated by sqlc. DO NOT EDIT.
// source: user_article_relationship.sql

package db

import (
	"context"
)

const createUserArticleRelationship = `-- name: CreateUserArticleRelationship :one
INSERT INTO user_article_relationships (
  follower_id, followed_id
) VALUES (
  $1, $2
)
RETURNING id, follower_id, followed_id, created_at, updated_at
`

type CreateUserArticleRelationshipParams struct {
	FollowerID int32 `json:"follower_id"`
	FollowedID int32 `json:"followed_id"`
}

func (q *Queries) CreateUserArticleRelationship(ctx context.Context, arg CreateUserArticleRelationshipParams) (UserArticleRelationship, error) {
	row := q.db.QueryRowContext(ctx, createUserArticleRelationship, arg.FollowerID, arg.FollowedID)
	var i UserArticleRelationship
	err := row.Scan(
		&i.ID,
		&i.FollowerID,
		&i.FollowedID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteUserArticleRelationship = `-- name: DeleteUserArticleRelationship :exec
DELETE FROM user_article_relationships
WHERE follower_id = $1
`

func (q *Queries) DeleteUserArticleRelationship(ctx context.Context, followerID int32) error {
	_, err := q.db.ExecContext(ctx, deleteUserArticleRelationship, followerID)
	return err
}
